{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/scripts/components/Scene.js","src/scripts/components/Text.js","src/scripts/components/Video.js","src/scripts/initialize.js","src/scripts/shaders/noises/noise3D.glsl","src/scripts/shaders/water.fragment.glsl","src/scripts/utils/Vector2.js","src/scripts/utils/Vector3.js","src/scripts/utils/Vector4.js","src/scripts/utils/config.js","src/scripts/utils/mapper.js","src/scripts/utils/serializer.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Vector2 \t\tfrom '../utils/Vector2';\nimport Vector3 \t\tfrom '../utils/Vector3';\nimport Vector4 \t\tfrom '../utils/Vector4';\n\nimport config \t\tfrom '../utils/config';\nimport mapper \t\tfrom '../utils/mapper';\nimport serializer \tfrom '../utils/serializer';\n\nimport Video \t\tfrom './Video';\nimport Text \t\tfrom './Text';\n\n// var PIXI = require('pixi');\n\nmodule.exports = class Scene{\n\n\tconstructor() {\n\t\tthis.render  \t= this.render.bind(this);\n\t\tthis.onResize\t= this.onResize.bind(this);\n\t\tthis.onMove\t\t= this.onMove.bind(this);\n\t\tthis.onClick\t= this.onClick.bind(this);\n\t\tthis.onMouseDown= this.onMouseDown.bind(this);\n\t\tthis.onMouseUp\t= this.onMouseUp.bind(this);\n\n\t\tthis.interactionsPos \t= new Array();\n\t\tthis.interactionsTime \t= new Array();\n\t\tthis.interactionsIndex \t= 0;\n\t\tthis.container \t\t\t= config.canvas.element;\n\t\tthis.width \t\t\t\t= this.container.offsetWidth / config.scale;\n\t\tthis.height \t\t\t= this.container.offsetHeight / config.scale;\n\n\t\tfor( let i = 0 ; i < config.maxInteractions * 3 ; i++ ) {\n\t\t\tthis.interactionsPos[i]  = new Vector3( 0, 0, 0 );\n\t\t\tthis.interactionsTime[i] = 100;\n\t\t}\n\n\t\tthis.app = new PIXI.Application( this.width, this.height );\n\t\tthis.group = new PIXI.Container();\n\n\n\t\tthis.fragmentShader = require('../shaders/noises/noise3D.glsl') + '#define MAX_INT ' + config.maxInteractions + require('../shaders/water.fragment.glsl');;\n\t\tthis.gazolineUniforms = {\n\t\t\tuTime: \t\t\t\t{ type: \"f\", \tvalue: .0 },\n\t\t\tuNoiseInfluence:\t{ type: \"f\", \tvalue: .0 },\n\t\t\tuResolution: \t\t{ type: \"v2\", \tvalue: new Vector2( this.width, this.height ) },\n\t\t\tuInteractionsPos: \t{ type: 'v3v', \tvalue: serializer( this.interactionsPos, 3) },\n\t\t\tuInteractionsTime: \t{ type: 'fv1', \tvalue: this.interactionsTime },\n\t\t\tuInteractionsIndex: { type: 'i', \tvalue: this.interactionsIndex },\n\t\t};\n\n\t\tthis.filter = new PIXI.Filter( null, this.fragmentShader, this.gazolineUniforms);\n\t\tthis.group.filters = [ this.filter ];\n\n\t\tthis.sprite = PIXI.Sprite.fromImage( config.textureURL );\n\t\tthis.sprite.texture.baseTexture.on('loaded', this.onResize);\n\t\tthis.group.addChild( this.sprite );\n\n\t\tif( config.useVideo ) {\n\t\t\tthis.spriteVideo = new Video();\n\t\t\tthis.group.addChild( this.spriteVideo.sprite );\n\t\t}\n\n\t\tif( config.text != void 0 && config.text != '' ) {\n\t\t\tthis.spriteText = new Text();\n\t\t\tthis.group.addChild( this.spriteText.text );\n\t\t}\n\n\t\tthis.group.interactive = true;\n\t\tthis.group.on('pointermove', this.onMove);\n\t\tthis.group.on('pointerdown', this.onClick);\n\n\t\tthis.app.stage.addChild( this.group );\n\t\tthis.container.appendChild( this.app.view );\n\t\twindow.addEventListener('resize', this.onResize);\n\n\t\tsetTimeout(()=>{\n\t\t\tthis.onResize();\n\t\t}, 1000);\n\n\t\tthis.app.ticker.add( this.render );\n\t}\n\n\tonClick( event ) {\n\t\tthis.addInteractionFromEvent( event, 100 );\n\t}\n\n\tonMove( event ) {\n\t\tthis.addInteractionFromEvent( event, this.isCapting ? 100 : 1 );\n\t}\n\n\tonMouseDown( event ) {\n\t}\n\n\tonMouseUp( event ) {\n\t}\n\n\tonResize() {\n\t\tthis.width \t= this.container.offsetWidth / config.scale;\n\t\tthis.height = this.container.offsetHeight / config.scale;\n\n\t\tthis.app.renderer.resize( this.width, this.height );\n\n\t\tthis.app.view.style.transform = 'scale(' + config.scale + ')';\n\t\tthis.app.view.style.transformOrigin = '0 0';\n\n\t\tlet imageRatio = this.sprite.width / this.sprite.height;\n\t\tlet containerRatio = this.width / config.scale / this.height;\n\n\t\tif(containerRatio > imageRatio) {\n\t\t    this.sprite.height = this.sprite.height / (this.sprite.width / this.width);\n\t\t    this.sprite.width = this.width;\n\t\t    this.sprite.position.x = 0;\n\t\t    this.sprite.position.y = (this.height - this.sprite.height) / 2;\n\t\t}else{\n\t\t    this.sprite.width = this.sprite.width / (this.sprite.height / this.height);\n\t\t    this.sprite.height = this.height;\n\t\t    this.sprite.position.y = 0;\n\t\t    this.sprite.position.x = (this.width - this.sprite.width) / 2;\n\t\t}\n\n\t\tif( config.useVideo ) {\n\t\t\tthis.spriteVideo.onResize( this.width, this.height );\n\t\t}\n\n\t\tif( config.text != void 0 && config.text != '' ) {\n\t\t\tthis.spriteText.onResize( this.width, this.height );\n\t\t}\n\t}\n\n\taddInteractionFromEvent( event, ponderation ) {\n\t\tlet position = event.data.global;\n\t\tposition.y = this.sprite.height - position.y;\n\n\t\tif( this.interactionsIndex > config.maxInteractions ) {\n\t\t\tthis.removeItem(0);\n\t\t}\n\n\t\tif( ponderation != 100 ){\n\t\t\tif( this.interactionsIndex > 0 ) {\n\t\t\t\tlet delta = new Vector2( position.x, position.y ).distanceTo( new Vector2( this.interactionsPos[ this.interactionsIndex - 1 ].x, this.interactionsPos[ this.interactionsIndex - 1 ].y ) );\n\t\t\t\tponderation = 1 - delta *.5;\n\t\t\t\t\n\t\t\t\tif( ponderation < config.minPonderation ) {\n\t\t\t\t\tponderation = config.minPonderation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tponderation = 1;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.interactionsPos[ this.interactionsIndex ] \t\t= new Vector3( position.x, position.y, ponderation);\n\t\tthis.interactionsTime[ this.interactionsIndex ] = 0;\n\t\tthis.interactionsIndex++;\n\t\t\n\t\tthis.filter.uniforms.uInteractionsIndex = this.interactionsIndex;\n\t\tthis.filter.uniforms.uInteractionsPos = serializer( this.interactionsPos, 3);\n\t}\n\n\trender( delta ) {\n\t\tdelta *= .01;\n\n\t\tthis.filter.uniforms.uTime += delta;\n\n\t\tfor( let i = 0 ; i < this.interactionsIndex ; i++ ) {\n\t\t\tthis.interactionsTime[i] += delta;\n\n\t\t\t// GARBAGE COLLECTOR FOR INTERACTIONS ARRAYS\n\t\t\tif( this.interactionsPos[i].z != 100 ) {\n\t\t\t\tif( this.interactionsTime[i] > 3 &&  this.interactionsTime[i] < 50 ) {\n\t\t\t\t\tthis.removeItem( i );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( this.interactionsPos[i].z == 100 ) {\n\t\t\t\tif( this.interactionsTime[i] > 5 &&  this.interactionsTime[i] < 50 ) {\n\t\t\t\t\tthis.removeItem( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.filter.uniforms.uNoiseInfluence = this.interactionsIndex / 250;\n\n\t\tthis.filter.uniforms.uInteractionsTime = this.interactionsTime;\n\n\t\tif( config.useVideo ) {\n\t\t\tthis.spriteVideo.render();\n\t\t}\n\t}\n\n\tremoveItem( index ) {\n\t\tthis.interactionsTime.splice( index, 1)\n\t\tthis.interactionsPos.splice( index, 1);\n\t\tthis.interactionsIndex--;\n\n\t\tthis.interactionsPos.push( new Vector2( 0, 0, 0 ) );\n\t\tthis.interactionsTime.push( 100 );\n\n\t\tthis.filter.uniforms.uInteractionsIndex = this.interactionsIndex;\n\t\tthis.filter.uniforms.uInteractionsPos = serializer( this.interactionsPos, 3);\n\t}\n\n};","import config from '../utils/config';\r\n\r\nmodule.exports =  class Text {\r\n\tconstructor() {\r\n\t\tthis.onResize \t= this.onResize.bind ( this );\r\n\r\n\t\tthis.textStyle \t= new PIXI.TextStyle({\r\n\t\t\tfontFamily: 'Arial',\r\n\t\t\tfontSize: 36,\r\n\t\t\tfontWeight: 'bold',\r\n\t\t\tfill: '#000000',\r\n\t\t\twordWrap: true,\r\n\t\t\twordWrapWidth: 440\r\n\t\t});\r\n\r\n\t\tthis.text = new PIXI.Text(config.text, this.textStyle);\r\n\t\tthis.text.anchor.set( 0.5, 0.5 );\r\n\t}\r\n\r\n\tonResize( width, height ) {\r\n\t\tthis.width \t= width;\r\n\t\tthis.height = height;\r\n\r\n\t\tthis.text.x = this.width  * .5;\r\n\t\tthis.text.y = this.height * .5;\r\n\r\n\t\tthis.textStyle.wordWrapWidth = this.width * .9;\r\n\r\n\t}\r\n}","import config from '../utils/config';\r\n\r\nmodule.exports =  class Video {\r\n\tconstructor( url ) {\r\n\t\tthis.render \t= this.render.bind( this );\r\n\t\tthis.onResize \t= this.onResize.bind ( this );\r\n\r\n\t\tthis.createVideo();\r\n\r\n\t\tthis.sprite = new PIXI.Sprite( PIXI.Texture.fromCanvas( this.videoImage ) );\r\n\t}\r\n\r\n\trender() {\r\n\t\tif ( this.video.readyState === this.video.HAVE_ENOUGH_DATA ) {\r\n\t\t\tthis.videoImageContext.drawImage( this.video, 0, 0 );\r\n\t\t\tthis.sprite.texture.update();\r\n\t\t}\r\n\t}\r\n\r\n\tcreateVideo() {\r\n\t\tthis.video = document.createElement( 'video' );\r\n\t\tthis.video.src = config.video.url;\r\n\t\tthis.video.load();\r\n\t\tthis.video.play();\r\n\r\n\t\tthis.videoImage = document.createElement( 'canvas' );\r\n\t\tthis.videoImage.width = 1280;\r\n\t\tthis.videoImage.height = 720;\r\n\t\t\r\n\t\tthis.videoImageContext = this.videoImage.getContext( '2d' );\r\n\t\tthis.videoImageContext.fillStyle = '#000000';\r\n\t\tthis.videoImageContext.fillRect( 0, 0, this.videoImage.width, this.videoImage.height );\r\n\r\n\t\t// TO CHECK VIDEO PLAYING\r\n\t\tthis.videoImage.style.width = \"160px\";\r\n\t\tthis.videoImage.style.height = \"90px\";\r\n\t\tthis.videoImage.style.display = \"block\";\r\n\t\tthis.videoImage.style.position = \"absolute\";\r\n\t\tthis.videoImage.style.top = \"0\";\r\n\t\tthis.videoImage.style.left = \"0\";\r\n\t\t// document.body.appendChild( this.videoImage );\r\n\t}\r\n\r\n\tonResize( width, height ) {\r\n\t\tthis.width \t= width;\r\n\t\tthis.height = height;\r\n\r\n\r\n\t\tlet imageRatio = this.sprite.width / this.sprite.height;\r\n\t\tlet containerRatio = this.width / this.height;\r\n\r\n\t\tif(containerRatio > imageRatio) {\r\n\t\t    this.sprite.height = this.sprite.height / (this.sprite.width / this.width);\r\n\t\t    this.sprite.width = this.width;\r\n\t\t    this.sprite.position.x = 0;\r\n\t\t    this.sprite.position.y = (this.height - this.sprite.height) / 2;\r\n\t\t}else{\r\n\t\t    this.sprite.width = this.sprite.width / (this.sprite.height / this.height);\r\n\t\t    this.sprite.height = this.height;\r\n\t\t    this.sprite.position.y = 0;\r\n\t\t    this.sprite.position.x = (this.width - this.sprite.width) / 2;\r\n\t\t}\r\n\t}\r\n}","import Scene from './components/Scene'\r\n\r\nwindow.onload = function() {\r\n\r\n\tvar items = document.querySelectorAll('.js-gazoline');\r\n\tvar exp = new Array();\r\n\r\n\tif( items == void 0 || items.length == 0 ) { return; }\r\n\r\n\tfor( let i = 0 ; i < items.length ; i++ ) {\r\n\t\texp.push( new Scene( items[i] ) );\r\n\t}\r\n\r\n\r\n}\r\n","module.exports = \"//\\r\\n// Description : Array and textureless GLSL 2D/3D/4D simplex \\r\\n//               noise functions.\\r\\n//      Author : Ian McEwan, Ashima Arts.\\r\\n//  Maintainer : stegu\\r\\n//     Lastmod : 20110822 (ijm)\\r\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\r\\n//               Distributed under the MIT License. See LICENSE file.\\r\\n//               https://github.com/ashima/webgl-noise\\r\\n//               https://github.com/stegu/webgl-noise\\r\\n// \\r\\n\\r\\nvec3 mod289(vec3 x) {\\r\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\r\\n}\\r\\n\\r\\nvec4 mod289(vec4 x) {\\r\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\r\\n}\\r\\n\\r\\nvec4 permute(vec4 x) {\\r\\n     return mod289(((x*34.0)+1.0)*x);\\r\\n}\\r\\n\\r\\nvec4 taylorInvSqrt(vec4 r)\\r\\n{\\r\\n  return 1.79284291400159 - 0.85373472095314 * r;\\r\\n}\\r\\n\\r\\nfloat snoise(vec3 v)\\r\\n  { \\r\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\r\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\r\\n\\r\\n// First corner\\r\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\r\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\r\\n\\r\\n// Other corners\\r\\n  vec3 g = step(x0.yzx, x0.xyz);\\r\\n  vec3 l = 1.0 - g;\\r\\n  vec3 i1 = min( g.xyz, l.zxy );\\r\\n  vec3 i2 = max( g.xyz, l.zxy );\\r\\n\\r\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\r\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\r\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\r\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\r\\n  vec3 x1 = x0 - i1 + C.xxx;\\r\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\r\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\r\\n\\r\\n// Permutations\\r\\n  i = mod289(i); \\r\\n  vec4 p = permute( permute( permute( \\r\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\r\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \\r\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\r\\n\\r\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\r\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\r\\n  float n_ = 0.142857142857; // 1.0/7.0\\r\\n  vec3  ns = n_ * D.wyz - D.xzx;\\r\\n\\r\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\r\\n\\r\\n  vec4 x_ = floor(j * ns.z);\\r\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\r\\n\\r\\n  vec4 x = x_ *ns.x + ns.yyyy;\\r\\n  vec4 y = y_ *ns.x + ns.yyyy;\\r\\n  vec4 h = 1.0 - abs(x) - abs(y);\\r\\n\\r\\n  vec4 b0 = vec4( x.xy, y.xy );\\r\\n  vec4 b1 = vec4( x.zw, y.zw );\\r\\n\\r\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\r\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\r\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\r\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\r\\n  vec4 sh = -step(h, vec4(0.0));\\r\\n\\r\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\r\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\r\\n\\r\\n  vec3 p0 = vec3(a0.xy,h.x);\\r\\n  vec3 p1 = vec3(a0.zw,h.y);\\r\\n  vec3 p2 = vec3(a1.xy,h.z);\\r\\n  vec3 p3 = vec3(a1.zw,h.w);\\r\\n\\r\\n//Normalise gradients\\r\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\r\\n  p0 *= norm.x;\\r\\n  p1 *= norm.y;\\r\\n  p2 *= norm.z;\\r\\n  p3 *= norm.w;\\r\\n\\r\\n// Mix final noise value\\r\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\r\\n  m = m * m;\\r\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \\r\\n                                dot(p2,x2), dot(p3,x3) ) );\\r\\n  }\\r\\n\";\n","module.exports = \"\\r\\n#define MAX_DIST_1 7.\\r\\n#define MAX_DIST_2 10.\\r\\n#define MAX_Time 10.\\r\\n#define PI 3.1415926535\\r\\n#define PI_2 6.2831853071\\r\\n\\r\\n#define s_influenceSlope -.1\\r\\n#define s_frequency 2.5\\r\\n#define s_amplitude .2\\r\\n#define s_waveLength .5\\r\\n#define s_shift .08\\r\\n\\r\\n#define b_influenceSlope -.15\\r\\n#define b_frequency 4.\\r\\n#define b_amplitude 4.\\r\\n#define b_waveLength .2\\r\\n#define b_shift 1.\\r\\n\\r\\n\\r\\n\\r\\nuniform float uTime;\\r\\nuniform sampler2D uSampler;\\r\\nuniform vec2 uResolution;\\r\\nuniform sampler2D uTex;\\r\\n\\r\\nvarying vec2 vFilterCoord;\\r\\nvarying vec2 vTextureCoord;\\r\\nvarying vec4 vColor;\\r\\n\\r\\nuniform float uInteractionsTime[ MAX_INT ];\\r\\nuniform vec3 uInteractionsPos[ MAX_INT ];\\r\\nuniform float uInteractionsPonderation[ MAX_INT ];\\r\\nuniform int uInteractionsIndex;\\r\\n\\r\\nvec3 offset = vec3( 0., .1, .2);\\r\\nvec3 offsetWave = vec3( .4, .2, .0);\\r\\nvec3 noise \\t= vec3(.0, .0, .0);\\r\\nvec3 rgb \\t= vec3(.0, .0, .0);\\r\\nvec2 diff \\t= vec2(.0, .0);\\r\\n\\r\\nvoid main( void ) {\\r\\n\\r\\n\\tvec2 uvs = vTextureCoord.xy;\\r\\n\\r\\n\\tnoise = vec3(\\r\\n\\t\\tsnoise( vec3( uvs * 2. + offset.r, uTime * .5 ) ) * .5 + 1.,\\r\\n\\t\\tsnoise( vec3( uvs * 2. + offset.g, uTime * .5 ) ) * .5 + 1.,\\r\\n\\t\\tsnoise( vec3( uvs * 2. + offset.b, uTime * .5 ) ) * .5 + 1.\\r\\n\\t);\\r\\n\\r\\n\\tvec3 globalSinVal = vec3( 1. );\\r\\n\\tvec2 explosions = vec2( 0. );\\r\\n\\r\\n\\tvec3 sinVal = vec3( .0 );\\r\\n\\tfloat dist  = .0;\\r\\n\\tfloat influence = .0;\\r\\n\\tfloat influenceTime = .0;\\r\\n\\tfloat vitesse = .0;\\r\\n\\r\\n\\tfor( int i = 0 ; i < MAX_INT ; i++ ) {\\r\\n\\t\\tif( i >= uInteractionsIndex ) {\\r\\n\\t\\t\\tbreak;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tsinVal = vec3( .0 );\\r\\n\\t\\tdist = .0;\\r\\n\\t\\tinfluence = .0;\\r\\n\\t\\tinfluenceTime = .0;\\r\\n\\t\\tvitesse = 1.;\\r\\n\\r\\n\\r\\n\\t\\tif( uInteractionsPos[i].z != 100. ) {\\r\\n\\t\\t\\tdist = distance( uInteractionsPos[i].xy, gl_FragCoord.xy ) / uInteractionsPos[i].z * 0.04;\\r\\n\\r\\n\\r\\n\\t\\t\\tif( uInteractionsTime[i] < 2. && dist < MAX_DIST_1 / uInteractionsPos[i].z ) {\\r\\n\\t\\t\\t\\tinfluence = ( dist * s_influenceSlope ) + uInteractionsTime[i] * .7 + .2;\\r\\n\\r\\n\\t\\t\\t\\t// FADE OUT\\r\\n\\t\\t\\t\\tinfluenceTime = ( uInteractionsTime[i] * -.5 + 1. );\\r\\n\\r\\n\\r\\n\\t\\t\\t\\tif( influenceTime > .0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tinfluence = influence * influenceTime ;\\r\\n\\r\\n\\t\\t\\t\\t\\tif( influence > .0 )\\t\\t\\t\\t {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// HERE WE ONLY CALCULATE REAL WAVE\\r\\n\\t\\t\\t\\t\\t\\tsinVal = sin( ( dist * s_waveLength - uInteractionsTime[i] * s_frequency ) + offsetWave ) * s_amplitude + s_shift;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tsinVal = sinVal * influence;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\telse if( uInteractionsPos[i].z == 100. ) {\\r\\n\\t\\t\\tdist = distance( uInteractionsPos[i].xy, gl_FragCoord.xy ) * 0.04;\\r\\n\\r\\n\\t\\t\\t// INFLUENCE FROM DIST + SPAWNING \\r\\n\\t\\t\\tif( uInteractionsTime[i] < 4. && dist < MAX_DIST_2 ) {\\r\\n\\t\\t\\t\\tinfluence = ( dist * b_influenceSlope ) + uInteractionsTime[i] * .5 + .0;\\r\\n\\r\\n\\t\\t\\t\\tif( influence > 1. ) { \\r\\n\\t\\t\\t\\t\\tinfluence = 1.;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// FADE OUT\\r\\n\\t\\t\\t\\tinfluenceTime = ( uInteractionsTime[i] * -.3 + 1. );\\r\\n\\t\\t\\t\\t// influenceTime = 1. * exp( -1. * uInteractionsTime[i] );\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\tif( influenceTime > .0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tinfluence = influence * influenceTime ;\\r\\n\\r\\n\\t\\t\\t\\t\\t// influence is gonna act on simili sombrero function\\r\\n\\t\\t\\t\\t\\tif( influence > .0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// HERE WE ONLY CALCULATE REAL WAVE\\r\\n\\t\\t\\t\\t\\t\\tsinVal = sin( ( dist * b_waveLength - uInteractionsTime[i] * b_frequency ) + offsetWave ) * b_amplitude + b_shift;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tsinVal = sinVal * influence;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif( sinVal == vec3( .0 ) ) { continue; }\\r\\n\\r\\n\\t\\tglobalSinVal = globalSinVal + globalSinVal * sinVal;\\r\\n\\r\\n\\t\\texplosions = explosions + ( vec2( uInteractionsPos[i].xy - gl_FragCoord.xy ) ) / dist * sin( sinVal.g * PI + PI );\\r\\n\\t}\\r\\n\\r\\n\\trgb = texture2D(uSampler, vTextureCoord + explosions * .0004 ).rgb * noise;\\r\\n\\r\\n\\trgb = rgb * globalSinVal;\\r\\n\\r\\n\\tgl_FragColor = vec4( rgb, 1. );\\r\\n}\\r\\n\";\n","module.exports = class Vector2 {\r\n\r\n\tconstructor( x, y ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\r\n\t\tthis.isVector2 = true;\r\n\t}\r\n\r\n\tset( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivide( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar() {\r\n\r\n\t\tvar min = new Vector2();\r\n\t\tvar max = new Vector2();\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tclampLength( min, max ) {\r\n\r\n\t\tvar length = this.length();\r\n\r\n\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t}\r\n\r\n\tlengthManhattan() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t}\r\n\r\n\tangle() {\r\n\r\n\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\tvar angle = Math.atan2( this.y, this.x );\r\n\r\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\r\n\r\n\t\treturn angle;\r\n\r\n\t}\r\n\r\n\tdistanceTo( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t}\r\n\r\n\tdistanceToSquared( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t}\r\n\r\n\tdistanceToManhattan( v ) {\r\n\r\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index, offset ) {\r\n\r\n\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateAround( center, angle ) {\r\n\r\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\tvar x = this.x - center.x;\r\n\t\tvar y = this.y - center.y;\r\n\r\n\t\tthis.x = x * c - y * s + center.x;\r\n\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};","module.exports = class Vector3 {\r\n\r\n\tconstructor( x, y, z ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\r\n\t\tthis.isVector3 = true;\r\n\t}\r\n\r\n\tset( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\t\tvar w =  e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ];\r\n\r\n\t\treturn this.divideScalar( w );\r\n\r\n\t}\r\n\r\n\tapplyQuaternion( q ) {\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttransformDirection( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\treturn this.normalize();\r\n\r\n\t}\r\n\r\n\tdivide( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar() {\r\n\r\n\t\tvar min = new Vector3();\r\n\t\tvar max = new Vector3();\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tclampLength( min, max ) {\r\n\r\n\t\tvar length = this.length();\r\n\r\n\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t}\r\n\r\n\t// TODO lengthSquared?\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t}\r\n\r\n\tlengthManhattan() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t}\r\n\r\n\tcross( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcrossVectors( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprojectOnVector( vector ) {\r\n\r\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\r\n\r\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\r\n\r\n\t}\r\n\r\n\tprojectOnPlane() {\r\n\r\n\t\tvar v1 = new Vector3();\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\treflect() {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1 = new Vector3();\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tangleTo( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( Math.max( -1, Math.min( 1, theta ) ) );\r\n\r\n\t}\r\n\r\n\tdistanceTo( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t}\r\n\r\n\tdistanceToSquared( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t}\r\n\r\n\tdistanceToManhattan( v ) {\r\n\r\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\r\n\r\n\t}\r\n\r\n\tsetFromSpherical( s ) {\r\n\r\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\r\n\r\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\r\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\r\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCylindrical( c ) {\r\n\r\n\t\tthis.x = c.radius * Math.sin( c.theta );\r\n\t\tthis.y = c.y;\r\n\t\tthis.z = c.radius * Math.cos( c.theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrixPosition( m ) {\r\n\r\n\t\treturn this.setFromMatrixColumn( m, 3 );\r\n\r\n\t}\r\n\r\n\tsetFromMatrixScale( m ) {\r\n\r\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrixColumn( m, index ) {\r\n\r\n\r\n\t\treturn this.fromArray( m.elements, index * 4 );\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index, offset ) {\r\n\r\n\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\t\tthis.z = attribute.getZ( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};","module.exports = class Vector4 {\r\n\r\n\tconstructor( x, y, z, w ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n\t\tthis.isVector4 = true;\r\n\t}\r\n\r\n\tset( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\t\tthis.w = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetW( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tsetAxisAngleFromQuaternion( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetAxisAngleFromRotationMatrix( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\r\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar() {\r\n\r\n\t\tvar min = new Vector4();\r\n\t\tvar max = new Vector4();\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t}\r\n\r\n\tlengthManhattan() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index, offset ) {\r\n\r\n\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\t\tthis.z = attribute.getZ( index );\r\n\t\tthis.w = attribute.getW( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n};","\r\nimport Vector2 from './Vector2';\r\nimport Vector3 from './Vector3';\r\nimport Vector4 from './Vector4';\r\n\r\nmodule.exports = {\t\r\n\tcanvas: {\r\n\t\telement : document.getElementById('container'),\r\n\t\tcolor : 0x000000\r\n\t},\r\n\r\n\taxisHelper: false,\r\n\t\r\n\tlights: {\r\n\t\tambient: {\r\n\t\t\tcolor : 0xffffff\r\n\t\t} \r\n\t},\r\n\r\n\tscale: 1.5,\r\n\r\n\tgreyscale: true,\r\n\r\n\tuseVideo: true,\r\n\r\n\ttextureURL: './assets/medias/test_2.jpg',\r\n\r\n\tmaxInteractions: 250,\r\n\r\n\ttext: 'I am banana',\r\n\r\n\tvideo: {\r\n\t\turl: './assets/medias/test_video.mp4',\r\n\t},\r\n\r\n\tfit: 'height',\r\n\r\n\tplane: {\r\n\t\twidth: 100,\r\n\t\theight: 50,\r\n\t\tsegments: 2\r\n\t},\r\n\r\n\tminPonderation: .5\r\n}\r\n\r\n","// https://github.com/tommycor/mapperJS/blob/master/mapper-min.js\r\nfunction mapper(val,oMin,oMax,nMin,nMax){return(((val-oMin)*(nMax-nMin))/(oMax-oMin))+(nMin);}\r\n\r\nmodule.exports = mapper;","module.exports = function(vectors, dimension) {\r\n\tif( dimension == 2 ) {\r\n\r\n\t\tvar offset = 0;\r\n\t\tvar array = new Array();\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2 is undefined!', i );\r\n\t\t\t\tvector = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\t}\r\n\telse if( dimension == 3 ) {\r\n\r\n\t\tvar offset = 0;\r\n\t\tvar array = new Array();\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector3 is undefined!', i );\r\n\t\t\t\tvector = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\t}\r\n\telse if( dimension == 4 ) {\r\n\r\n\t\tvar offset = 0;\r\n\t\tvar array = new Array();\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector4 is undefined!', i );\r\n\t\t\t\tvector = new Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\t\t\r\n\t\treturn array;\r\n\t}\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}